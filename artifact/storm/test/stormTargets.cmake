# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget storm storm-counterexamples storm-parsers storm-version-info storm-cli-utilities storm-gspn storm-dft storm-pars storm-pomdp storm-conv)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target storm
add_library(storm SHARED IMPORTED)

set_target_properties(storm PROPERTIES
  INTERFACE_LINK_LIBRARIES "l3pp;gmm;StormEigen;target-boost-1_SHARED;target-boost-2_SHARED;ExprTk;ModernJSON;Z3_SHARED;glpk_SHARED;cudd_STATIC;sylvan_STATIC;HWLOC_STATIC;CppTemplate;lib_carl;GINAC_SHARED;CLN_SHARED;GMPXX_SHARED;GMP_SHARED"
)

# Create imported target storm-counterexamples
add_library(storm-counterexamples SHARED IMPORTED)

set_target_properties(storm-counterexamples PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm"
)

# Create imported target storm-parsers
add_library(storm-parsers SHARED IMPORTED)

set_target_properties(storm-parsers PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm"
)

# Create imported target storm-version-info
add_library(storm-version-info SHARED IMPORTED)

# Create imported target storm-cli-utilities
add_library(storm-cli-utilities SHARED IMPORTED)

set_target_properties(storm-cli-utilities PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm;storm-counterexamples;storm-parsers;storm-version-info"
)

# Create imported target storm-gspn
add_library(storm-gspn SHARED IMPORTED)

set_target_properties(storm-gspn PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm;storm-conv;storm-parsers;/usr/local/lib/libxerces-c.so;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/CoreFoundation.framework;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/CoreServices.framework"
)

# Create imported target storm-dft
add_library(storm-dft SHARED IMPORTED)

set_target_properties(storm-dft PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm;storm-gspn;storm-conv;storm-parsers"
)

# Create imported target storm-pars
add_library(storm-pars SHARED IMPORTED)

set_target_properties(storm-pars PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm"
)

# Create imported target storm-pomdp
add_library(storm-pomdp SHARED IMPORTED)

set_target_properties(storm-pomdp PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm;storm-parsers"
)

# Create imported target storm-conv
add_library(storm-conv SHARED IMPORTED)

set_target_properties(storm-conv PROPERTIES
  INTERFACE_LINK_LIBRARIES "storm"
)

# Import target "storm" for configuration "RELEASE"
set_property(TARGET storm APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm.dylib"
  )

# Import target "storm-counterexamples" for configuration "RELEASE"
set_property(TARGET storm-counterexamples APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-counterexamples PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-counterexamples.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-counterexamples.dylib"
  )

# Import target "storm-parsers" for configuration "RELEASE"
set_property(TARGET storm-parsers APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-parsers PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-parsers.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-parsers.dylib"
  )

# Import target "storm-version-info" for configuration "RELEASE"
set_property(TARGET storm-version-info APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-version-info PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-version-info.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-version-info.dylib"
  )

# Import target "storm-cli-utilities" for configuration "RELEASE"
set_property(TARGET storm-cli-utilities APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-cli-utilities PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-cli-utilities.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-cli-utilities.dylib"
  )

# Import target "storm-gspn" for configuration "RELEASE"
set_property(TARGET storm-gspn APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-gspn PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-gspn.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-gspn.dylib"
  )

# Import target "storm-dft" for configuration "RELEASE"
set_property(TARGET storm-dft APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-dft PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-dft.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-dft.dylib"
  )

# Import target "storm-pars" for configuration "RELEASE"
set_property(TARGET storm-pars APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-pars PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-pars.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-pars.dylib"
  )

# Import target "storm-pomdp" for configuration "RELEASE"
set_property(TARGET storm-pomdp APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-pomdp PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-pomdp.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-pomdp.dylib"
  )

# Import target "storm-conv" for configuration "RELEASE"
set_property(TARGET storm-conv APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(storm-conv PROPERTIES
  IMPORTED_LOCATION_RELEASE "/Users/jipspel/Documents/Tools/storm/test/lib/libstorm-conv.dylib"
  IMPORTED_SONAME_RELEASE "@rpath/libstorm-conv.dylib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
